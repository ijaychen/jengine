Index: writer.h
===================================================================
--- writer.h	(revision 588)
+++ writer.h	(working copy)
@@ -177,7 +177,7 @@
 
 		stream_.Put('\"');
 		for (const Ch* p = str; p != str + length; ++p) {
-			if ((sizeof(Ch) == 1 || *p < 256) && escape[(unsigned char)*p])  {
+			if ((sizeof(Ch) == 1 || (unsigned)*p < 256) && escape[(unsigned char)*p])  {
 				stream_.Put('\\');
 				stream_.Put(escape[(unsigned char)*p]);
 				if (escape[(unsigned char)*p] == 'u') {
Index: reader.h
===================================================================
--- reader.h	(revision 588)
+++ reader.h	(working copy)
@@ -404,7 +404,7 @@
 			Ch c = s.Take();
 			if (c == '\\') {	// Escape
 				Ch e = s.Take();
-				if ((sizeof(Ch) == 1 || e < 256) && escape[(unsigned char)e])
+				if ((sizeof(Ch) == 1 || (unsigned)e < 256) && escape[(unsigned char)e])
 					RAPIDJSON_PUT(escape[(unsigned char)e]);
 				else if (e == 'u') {	// Unicode
 					unsigned codepoint = ParseHex4(s);
Index: document.h
===================================================================
--- document.h	(revision 587)
+++ document.h	(working copy)
@@ -703,7 +703,7 @@
 		GenericReader<Encoding> reader;
 		if (reader.Parse<parseFlags>(stream, *this)) {
 			RAPIDJSON_ASSERT(stack_.GetSize() == sizeof(ValueType)); // Got one and only one root object
-			RawAssign(*stack_.template Pop<ValueType>(1));
+			this->RawAssign(*stack_.template Pop<ValueType>(1));
 			parseError_ = 0;
 			errorOffset_ = 0;
 		}
